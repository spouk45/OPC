{% extends 'base.html.twig' %}
{% block stylesheets %}
    <style>
        /* Always set the map height explicitly to define the size of the div
         * element that contains the map. */
        #map {
            height: 500px;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
{% endblock %}

{% block body %}
    <a href="{{ path('security_login')}}"> Connexion</a>
    <div id="map" data-customers="{{ customers }}" ></div>

{% endblock %}
{% block javascripts %}

<script>
    function initMap() {
        const map = new google.maps.Map(document.getElementById('map'));

        // Create an array of alphabetical characters used to label the markers.
        // const labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

        // Add some markers to the map.
        // Note: The code uses the JavaScript Array.prototype.map() method to
        // create an array of markers based on a given "locations" array.
        // The map() method here has nothing to do with the Google Maps API.
        const bounds  = new google.maps.LatLngBounds();

        let markers = extractMarker(customersData,bounds);

        map.fitBounds(bounds);
        map.panToBounds(bounds);

        // Add a marker clusterer to manage the markers.
        let markerCluster = new MarkerClusterer(map, markers,
            {imagePath: 'https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/m'});
    }

    function extractMarker(customers,bounds){
        console.log(customers);
        console.log(customers.length);

        if(customers!= null && customers.length > 0) {

            return customers.map(function (customer, i) {
                let icon = customer.color+'.png';

                let loc = new google.maps.LatLng(customer.location.lat, customer.location.lng);
                bounds.extend(loc);
                let marker = new google.maps.Marker({
                    position: loc,
                    title: customer.fullName,
                    icon: 'img/'+icon,
                });

                let contentString = '<b>Adresse :</b> '+ customer.adress + '<br> <b>Date d\'anniversaire de contrat : </b>'+ customer.annivContratDate;
                let infowindow = new google.maps.InfoWindow({
                    content: contentString
                });

                marker.addListener('click', function () {
                    infowindow.open(map, marker);
                });
                return marker;
            });

        }
    }

    // function getCoords(customers){
    //     let coords = [];
    //     customers.forEach(function(customer){
    //         coords.push(customer.coordGPS);
    //     });
    //     return coords;
    // }

    // let locations = getCoords(JSON.parse($('#map').attr('data-customers')));
    let customersData = JSON.parse($('#map').attr('data-customers'));

</script>
    <script src="https://developers.google.com/maps/documentation/javascript/examples/markerclusterer/markerclusterer.js">
    </script>
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCaUI_ArQijMpu9trqK4mPIfCGGqKa_DDg&callback=initMap">
    </script>
{% endblock %}